# NOTE: When using the teb_local_planner, make sure to set the local costmap
# resolution high (for example 0.1 m), otherwise the optimization will take
# forever (around 10 minutes for each iteration).
base_local_planner: teb_local_planner/TebLocalPlannerROS
TebLocalPlannerROS:

  # Trajectory

  teb_autosize: True
  dt_ref: 0.3 #0.2
  dt_hysteresis: 0.03
  global_plan_overwrite_orientation: True
  max_global_plan_lookahead_dist: 0.50 #3.0
  feasibility_check_no_poses: 3

  # Robot

  max_vel_x: 0.20 #0.25 
  max_vel_x_backwards: 0.05 #0.2
  max_vel_theta: 0.20 #0.5
  acc_lim_x: 0.1
  acc_lim_theta: 0.1 #0.5, 0.26
  min_turning_radius: 0.0
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "polygon" #"circular" 
    radius: 0.38 # for type "circular"
    #line_start: [-0.3, 0.0] # for type "line"
    #line_end: [0.3, 0.0] # for type "line"
    #front_offset: 0.2 # for type "two_circles"
    #front_radius: 0.2 # for type "two_circles"
    #rear_offset: 0.2 # for type "two_circles"
    #rear_radius: 0.2 # for type "two_circles"
    vertices: [ [0.42, 0.29], [0.42, -0.29], [-0.42, -0.29], [-0.42,0.29] ] # waffle3"
    #vertices: [ [0.4, 0.3], [0.4, -0.3], [-0.4, -0.3], [-0.4, 0.3] ] # waffle4"

  # Goal tolerance

  xy_goal_tolerance: 0.2 #0.2
  yaw_goal_tolerance: 0.2
  free_goal_vel: False

  # Obstacles

  min_obstacle_dist: 0.15
  inflation_dist: 0.45
  dynamic_obstacle_inflation_dist: 0.05
  include_costmap_obstacles: True
  costmap_obstacles_behind_robot_dist: 0.5
  obstacle_poses_affected: 25 #30
  obstacle_association_force_inclusion_factor: 4
  obstacle_association_cutoff_factor: 8
  costmap_converter_plugin: ""
  costmap_converter_spin_thread: True
  costmap_converter_rate: 5

  # Optimization
  
  no_inner_iterations: 5 #5
  no_outer_iterations: 4 #4
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.001
  weight_max_vel_x: 2 #2
  weight_max_vel_theta: 1 #1
  weight_acc_lim_x: 1 # 1
  weight_acc_lim_theta: 1 # 1
  weight_kinematics_nh: 1000 #1000
  weight_kinematics_forward_drive: 1000 #1000
  weight_kinematics_turning_radius: 1000 #1 #only for car-like robots
  weight_optimaltime: 100.0 #1
  weight_obstacle: 100.0 #50
  weight_viapoint: 10.0 #5.0 #1.0
  weight_inflation: 0.1 #0.1
  weight_dynamic_obstacle: 10 # not in use yet
  selection_alternative_time_cost: False # not in use yet

  # Homotopy Class Planner

  enable_homotopy_class_planning: False #True
  enable_multithreading: True
  simple_exploration: False
  max_number_classes: 2 #4
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_keypoint_offset: 0.1
  obstacle_heading_threshold: 0.45
  visualize_hc_graph: False

  # ViaPoints

  global_plan_viapoint_sep: 0.25           # -0.1; Min. separation between each two consecutive via-points extracted from the global plan [if negative: disabled]
  via_points_ordered: true                 # If true, the planner adheres to the order of via-points in the storage container

  # Feedback

  publish_feedback: true                  # Publish planner feedback containing the full trajectory and a list of active obstacles (should be enabled only for evaluation or debugging purposes)
  exact_arc_length: false                  # If true, the planner uses the exact arc length in velocity, acceleration and turning rate computations [-> increased cpu time], otherwise the euclidean approximation is used.

  # Recovery

  shrink_horizon_backup: true              # Allows the planner to shrink the horizon temporary (50%) in case of automatically detected issues.
  oscillation_recovery: true               # Try to detect and resolve oscillations between multiple solutions in the same equivalence class (robot frequently switches between left/right/forward/backwards).

  odom_topic: odom
  map_frame: map